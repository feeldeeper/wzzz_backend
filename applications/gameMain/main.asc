/**
 * flash comm server & flash remoting example
 * How to use a simple flash comm server with
 * a remoting application inside
 */

// load the remoting classes
load("netservices.asc");

var state;
var history;

// on application started
application.onAppStart = function(){
	NetServices.setDefaultGatewayUrl("http://www.kala.com/Amf/");
	this.gatewayconn = NetServices.createGatewayConnection();
	state="";
	history="";
}

// once a new client connects
application.onConnect = function( client, obj ){
	trace(obj.userid+obj.userpsw);
	this.serv = this.gatewayconn.getService("Amf_User", this); 
	this.client=client;
	this.client.state="100";
	this.client.history="200";
	this.serv.loginfms(obj.userid,obj.userpsw);  
	//this.serv.loginfms("xiaozhi8888","57599f0e0f2778077f78fc00f143e41a");  
}

application.loginfms_Result = function (result_obj)
{
	if(result_obj.type=="loginOk")
	{ 
		application.acceptConnection(this.client);
		this.client.call("fmsCall","",result_obj);
		application.getcomm();	 
		this.intstat = setInterval(application.flashstat, 500,this.serv,this.client);
	}
	else
	{  
		application.rejectConnection(this.client);
	}
}	

application.onDisconnect = function()
{
	clearInterval(this.intstat);
}


application.getcomm = function()
{
	this.serv.gameStateList();
	this.serv.gameHistoryList();
	this.serv.broadcastNotice(); 
}

application.flashstat = function(serv,client)
{  
 
	serv.gameHistory(client.history);
	serv.gameState(client.state);
}

application.gameStateList_Result = function (result_obj)
{ 
	this.client.call("fmsCall","",result_obj);	 
}	
application.gameHistoryList_Result = function (result_obj)
{ 
	this.client.call("fmsCall","",result_obj);	 
}	
application.broadcastNotice_Result = function (result_obj)
{ 
	this.client.call("fmsCall","",result_obj);	 
}	
application.gameHistory_Result = function (result_obj)
{ 
	if(result_obj.type!="s")
	{
		for(var i=0;i<application.clients.length;i++)
		{
			application.clients[i].call("fmsCall","",result_obj);	
		} 
		this.client.history=result_obj.history;
	}
}	
application.gameState_Result = function (result_obj)
{ 
	if(result_obj.type!="s")
	{
		for(var i=0;i<application.clients.length;i++)
		{
			application.clients[i].call("fmsCall","",result_obj);	
		} 
		this.client.history=result_obj.history;
		this.client.state=result_obj.state;
	}
}	

 

application.hasConnected = function()
{
	

}
 

/**
 * Remoting Object
 * Default responder object for remoting calls
 */

/*

AMFPHPResult.prototype.isValidUser_Result = function( data ){
	this.client.validuser = data;
	// send back the results to the client object
	// by calling a method inside the netconnection object
	this.client.call("isValidUser_Result", null, data);
}

AMFPHPResult.prototype.addUser_Result = function( data ){	
	this.client.validuser = data;
	// send back the results to the client object
	// by calling a method inside the netconnection object	
	this.client.call("addUser_Result", null, data);
}*/