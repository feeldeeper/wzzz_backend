var nameList;
var playerList;

application.onAppStart=function()
{ 
    nameList = [];
    playerList = [];
}

application.hasConnected = function()
{
	

}

/*
application.validate = function(data,p_client){
p_client.s = new Date();//记录首次访问时的系统时间。
p_client.key = data;//用户凭证，我在这里面放的是一段加密凭证，由Flash从客户端提交
var my_lv = new LoadVars();
my_lv.onLoad = function( success ) 
{
        if(success) 
        {
            if(this.key)
            {
                application.acceptConnection(p_client);
            }
            else
            {
                application.rejectConnection(p_client);
            }
        } else 
        {
            application.rejectConnection(p_client);
        }
};
my_lv.load("http://xxx.com/validate.aspx?data=" + p_client.key + "&c=" );//通过这个页面解密
}
//Flash客户端断开FMS服务器后执行
application.disconnect = function(p_client){
var c = Math.round((new Date() - p_client.s)/1000);//这里是为了计算连接的秒数
var my_lv = new LoadVars();
my_lv.onLoad = function( success ) 
{
//需要FMS处理的代码
};
my_lv.load("http://xxx.com/validate.aspx?data=" + p_client.key + "&c=" + c +"&e=");//C 为客户端连接的秒数
}



application.onConnect = function(p_client,p_key)
{
    application.validate(p_key,p_client);
}

application.onDisconnect = function(p_client)
{
    application.disconnect(p_client);
}

//为了防止FMS服务或WEB服务出现异常，采用轮询的方式主动计费,以防止客户端出现未计费现象
//(这个方法的原则是保证FMS主动检测时间到客户端开始时间的费用已计算)
online = function () {    
    for (var i = 0; i<application.clients.length; i++) {
        if (application.clients[i].ping()) {
            //如果客户端还存在连接
            var my_lv = new LoadVars();
            var server_time = new Date();
            my_lv.load("http://xxx.com/validate.aspx?data=" + application.clients[i].key + "&live=" + server_time +"&e=");//
        } else {
            application.disconnect(application.clients[i]);
        }
    }    
};
setInterval(online, 6000);//检测时间间隔根据具体情况而定，时间越短，服务请求越多

*/

//连接
application.onConnect = function(client , obj)
{	
	var userName="lovelin";  
	var passWord="57599f0e0f2778077f78fc00f143e41a";  
	
	var my_lv = new LoadVars();
	my_lv.onLoad = function( success ) 
	{
		if(success)
		{
		trace("this.data"+this.data);
			if(this.data=="1")
			{
				application.acceptConnection(client);
				application.loginok(client);
				application.gameStateList(client);
				application.gameHistoryList(client);
				application.broadcastNotice(client);
			}
			else
			{ 
				application.rejectConnection(client);	
			}
		}
		else
		{ 
			application.rejectConnection(client);	
		}
		//client.call("fmsCall","",userName);
	};
	//my_lv.load("http://www.kala.com/code/verifylogin.php?u="+userName+"&p="+passWord);
	my_lv.load("http://www.kala.com/code/verifylogin.php?u=lovelin&p=57599f0e0f2778077f78fc00f143e41a");
	
 
}

application.loginok = function(client)
{
	var my_lv = new LoadVars();
	var obj = {};
	obj.type="login";
	obj.data="login";
	my_lv.onLoad = function( success ) 
	{
		client.call("fmsCall","",this.data);
	};
	my_lv.load("http://www.kala.com/code/loginok.php");//C 为客户端连接的秒数 
	
}

application.gameStateList = function(client)
{
	var my_lv = new LoadVars();
	var obj={};
	obj.type="login";
	obj.data="login";
	my_lv.onLoad = function( success ) 
	{
		client.call("fmsCall",obj,this.data);
	};
	my_lv.load("http://www.kala.com/code/gameStateList.php");//C 为客户端连接的秒数 
	
}

application.gameHistoryList = function(client)
{
	var my_lv = new LoadVars();
	var obj={};
	obj.type="login";
	obj.data="login";
	my_lv.onLoad = function( success ) 
	{
		client.call("fmsCall",obj,this.data);
	};
	my_lv.load("http://www.kala.com/code/gameHistoryList.php");//C 为客户端连接的秒数 
	
}

application.broadcastNotice = function(client)
{
	var my_lv = new LoadVars();
	var obj={};
	obj.type="login";
	obj.data="login";
	my_lv.onLoad = function( success ) 
	{
		client.call("fmsCall",obj,this.data);
	};
	my_lv.load("http://www.kala.com/code/broadcastNotice.php");//C 为客户端连接的秒数 
	
}
 


//断开
application.onDisconnect = function(client)
{
    var index =  nameList.indexOf(client.name);
    trace("当客户端断开，会响应这里：" + client.name);
    if(index >=0)
    {
        nameList.splice(index,1) ;
    }
    
    index = playerList.indexOf(client.name);
    if(index >=0 )
    {
        playerList.indexOf(index,1) ;
    }
    application.broadcastMsg("disconnect",client.name , application.getNowTime());  //广播一条消息,服务端也可以call客户端的
}

Client.prototype.sendMessage = function(obj, str)
{
    if(obj.isSecret == true)
    {
        trace("这里是私聊");
        var i = 0 ;
        var len = application.clients.length;
        for(i = 0 ; i< len ; i++)
        {
          if(application.clients[i].name == obj.userName)
          {
              application.clients[i].call("sendMessage" , null , obj , str , application.getNowTime())
          }
          else if(application.clients[i].name == obj.otherUser)
          {
              application.clients[i].call("sendMessage" , null , obj , str , application.getNowTime())
          }
        }
    }
    else
    {
        trace("这里是公共聊天");
        application.broadcastMsg("sendMessage" , obj , str , application.getNowTime());
    }
}

//客户端call过来，断开连接
Client.prototype.disconnect = function(userName)
{
    var len = application.clients.length;
    for(var i = 0 ; i< len ; i++)
    {
        if(application.clients[i].name == userName)
        {
            //客户端点击按钮主动断开连接。暂时不使用这样断开
            application.disconnect(application.clients[i]);
            break;
        }
    }
}

application.callFms = function()
{
	
}

//服务端调用服务端的方法
application.getNowTime = function ()
{
    var timedate = new Date();
    var hours = timedate.getHours();
    var minutes = timedate.getMinutes();
    var seconds = timedate.getSeconds();
    
    if(hours < 10) 
    {
        hours = "0" + hours;
    }
    
    if(minutes < 10) 
    {
        minutes = "0" + minutes;
    }
    
    if(seconds < 10) 
    {
        seconds = "0" + seconds;
    }
    return hours+":"+minutes+":"+seconds;  
}

Array.prototype.indexOf = function(k)
{
    var len = this.length;
    var index = -1;
    for(var i=0;i<len;i++)
    {
        if(k == this[i])
        {
            index = i;
            break;
        }
    }
    return index;
}